# define group app
upstream docker-compose down -v {
  # balancing by ip
  ip_hash;
  # define server app
  server docker-compose down -v:8000;
}

server {

    listen 80;
    # set client body size to 2M #
    client_max_body_size 100M;

    # all requests proxies to app
    location / {
        proxy_pass http://docker-compose down -v/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /static/ {
        alias /docker-compose down -v/static/;
    }
    location /media/ {
        alias /docker-compose down -v/media/;
    }

    # domain localhost
    server_name localhost;
}

server {

listen 80;
# set client body size to 2M #
client_max_body_size 10M;

 location / {
        proxy_pass http://flower:5555/;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        auth_basic  "Restricted";
        auth_basic_user_file  /etc/nginx/.htpasswd;
    }
    server_name $FLOWER_SERVER_NAME;
}

# portal http
server {

    listen 443;

    # all requests proxies to app
    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Simple requests
        if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin"  *;
        }

        # Preflighted requests
        if ($request_method = OPTIONS ) {
            add_header "Access-Control-Allow-Origin"  *;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
            add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            return 200;
        }

        if (!-f $request_filename) {
            proxy_pass http://docker-compose down -v;
            break;
        }

    }

    location /static/ {
        alias /docker-compose down -v/static/;
    }
    location /media/ {
        alias /docker-compose down -v/media/;
    }

    # domain localhost
    server_name $CELERY_SERVER_NAME;
}

